### note if local testing, macOS does not have the -q flag for nc (netcat) that other linux systems have, so remove if testing locally
### if running containerized you will more then likely need the -q0 flag
---
name: redisMultiFlex
apis: 
  - name: redis
    commands: 
      - run: (printf "info\r\n"; sleep 1) | nc -q0 192.168.0.100 6379 # or even ### run: "redis-cli -h 127.0.0.1 -p 6379 info" ### (depends on redis-cli)
        split_by: ":"
    remove_keys: # remove any keys that contain any of the following strings
      - human
    snake_to_camel: true 
    perc_to_decimal: true
    sub_parse:
      - type: prefix
        key: db
        split_by:
          - ","
          - "="
    custom_attributes:
      targetHost: redisServer1 ### use custom attributes section to distinguish by server
      targetIp: "192.168.0.100"
  - name: redis
    commands: 
      - run: (printf "info\r\n"; sleep 1) | nc -q0 192.168.0.4 9699 # or even ### run: "redis-cli -h 127.0.0.1 -p 6379 info" ### (depends on redis-cli)
        split_by: ":"
    remove_keys: # remove any keys that contain any of the following strings
      - human
    snake_to_camel: true 
    perc_to_decimal: true
    sub_parse:
      - type: prefix
        key: db
        split_by:
          - ","
          - "="
    custom_attributes:
      targetHost: redisServer2 ### use custom attributes section to distinguish by server
      targetIp: "192.168.0.4"